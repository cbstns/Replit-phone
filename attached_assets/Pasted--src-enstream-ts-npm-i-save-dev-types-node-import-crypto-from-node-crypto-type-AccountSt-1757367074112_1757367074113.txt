// src/enstream.ts
// npm i --save-dev @types/node
import crypto from "node:crypto";

type AccountStatus = "ACTIVE" | "SUSPENDED";
interface AccountStatusResponse {
  responseCode: number;
  responseMessage?: string;
  accountStatus?: AccountStatus;
}

const BASE_URL = "https://qa.enstreamidentity.com/api/rest/service/v1";
const PATH = "/accountStatus"; // swap for other endpoints if needed

export async function getAccountStatusByMsisdn(params: {
  msisdn: string; // E.164 format, e.g. "+14161234567"
  username: string; // QA basic auth username
  password: string; // QA basic auth password
  serviceProviderId: string; // e.g. "8349570948"
  consentGranted?: boolean; // defaults to true
  requestId?: string; // optional, autogenerated if omitted
}): Promise<AccountStatusResponse> {
  const {
    msisdn,
    username,
    password,
    serviceProviderId,
    consentGranted = true,
  } = params;
  const requestId = params.requestId ?? crypto.randomUUID();

  const auth = Buffer.from(`${username}:${password}`).toString("base64");

  const res = await fetch(`${BASE_URL}${PATH}`, {
    method: "POST",
    headers: {
      Authorization: `Basic ${auth}`,
      "Content-Type": "application/json; charset=UTF-8",
      Accept: "application/json",
    },
    body: JSON.stringify({
      serviceProviderId,
      requestId,
      msisdn,
      consentGranted,
    }),
  });

  if (!res.ok) {
    throw new Error(`HTTP ${res.status} ${res.statusText}`);
  }

  const data = (await res.json()) as AccountStatusResponse;

  // Optional: handle EnStream response codes
  // 0 = Found; 1 = Subscriber Not Found (or not whitelisted in QA); etc.
  return data;
}

// Example usage
(async () => {
  try {
    const result = await getAccountStatusByMsisdn({
      msisdn: "+16472221111",
      username: process.env.ENSTREAM_QA_USER ?? "10096", // example from doc; replace as needed
      password: process.env.ENSTREAM_QA_PASS ?? "<your-qa-password>",
      serviceProviderId: "8349570948",
    });

    if (result.responseCode === 0) {
      console.log("Found. Account status:", result.accountStatus);
    } else {
      console.log("Not found or special condition:", result.responseCode, result.responseMessage);
    }
  } catch (err) {
    console.error("EnStream call failed:", err);
  }
})();
